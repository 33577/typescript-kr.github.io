var path = require('path');
var hljs = require('highlight.js');
var CodeMirror = require('codemirror-highlight');

CodeMirror.loadMode('javascript');
CodeMirror.loadMode('clike');
CodeMirror.loadMode('shell');
CodeMirror.loadMode('xml');
// CodeMirror.loadMode('xml');
// var html = CodeMirror.highlight('1', { mode: 'javascript' });

var MAP = {
    'py': { mode: 'python' },
    'js': { mode: 'text/javascript' },
    'json': { mode: 'application/ld+json' },
    'rb': { mode: 'ruby' },
    'cs': { mode: 'text/x-csharp' },
    'ts': { mode: 'text/typescript' },
    'sh': { mode: 'text/x-sh' },
    'html': { mode: 'text/html' },
    'xml': { mode: 'application/xml' }
};

function normalize(lang) {
    if(!lang) { return null; }
    var lower = lang.toLowerCase();
    return MAP[lower] || lower;
}

function highlight(lang, code) {
    if(!lang) return {
        body: code,
        html: false
    };

    // Normalize lang
    // if(lang=='html')console.log(lang)
    lang = normalize(lang);
    try {
        return CodeMirror.highlight(code, lang);
        // return hljs.highlight(lang, code).value;
    } catch(e) { }
    return {
        body: code,
        html: false
    };
}


module.exports = {
    book: {
        assets: './css',
        css: [
            'website.css'
        ]
    },
    ebook: {
        assets: './css',
        css: [
            'ebook.css'
        ]
    },
    blocks: {
        code: function (block) {
            return highlight(block.kwargs.language, block.body);
        }
    }
};
